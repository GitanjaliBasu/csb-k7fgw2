{"version":3,"sources":["Components/Chat/BotMessage.js","Components/Chat/CodeFormatter.js","Components/Chat/Layout.js","Components/Chat/UserMessage.js","Components/UploadDocument.js","Components/MainLayout.js","Components/Chat/Chat.js","index.js"],"names":["BotMessage","_ref","message","_jsx","Stack","styles","root","backgroundColor","padding","borderRadius","children","Text","CodeFormatter","snippet","languageMatch","match","language","cleanedSnippet","replace","highlightedSnippet","hljs","highlightAuto","value","_jsxs","style","position","border","marginBottom","overflowX","whiteSpace","wordWrap","dangerouslySetInnerHTML","__html","FiCopy","cursor","right","top","color","fontSize","onClick","navigator","clipboard","writeText","Layout","horizontalAlign","verticalAlign","verticalFill","width","height","margin","textAlign","gap","Item","UserMessage","UploadDocument","onDocumentDataReceived","_useState","useState","_useState2","_slicedToArray","selectedFile","setSelectedFile","handleUpload","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","response","data","wrap","_context","prev","next","abrupt","FormData","append","fetch","concat","method","body","sent","json","console","log","t0","error","stop","apply","arguments","_Fragment","type","accept","onChange","event","target","files","display","id","htmlFor","Button","component","UploadFileIcon","marginLeft","CloudUploadIcon","useStyles","makeStyles","theme","appBar","title","flexGrow","container","MainLayout","classes","className","AppBar","Toolbar","Typography","variant","Chat","userMessage","setUserMessage","_useState3","_useState4","chatMessages","setChatMessages","_useState5","_useState6","isButtonClicked","setIsButtonClicked","chatContainerRef","useRef","fetchBotMessage","useCallback","headers","then","isError","answer","startsWith","formattedAnswer","formatMessage","groupedLinks","reference","reduce","acc","ref","link","push","pageNo","references","Object","entries","map","index","pages","href","rel","marginRight","page","i","botMessage","isBot","prevChatMessages","_toConsumableArray","slice","catch","useEffect","current","scrollTop","scrollHeight","split","line","React","Fragment","getTheme","classNames","mergeStyleSets","fontWeight","palette","themePrimary","inputContainer","alignItems","inputBox","borderColor","paddingLeft","paddingRight","paddingTop","paddingBottom","themeDark","flexDirection","overflow","justifyContent","horizontal","Icon","icon","redDark","alignSelf","TextField","autoComplete","autoFocus","multiline","resizable","underlined","placeholder","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.60e08cfe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Stack, Text } from \"@fluentui/react\";\r\n\r\nconst BotMessage = ({ message }) => (\r\n  <Stack\r\n    styles={{\r\n      root: {\r\n        backgroundColor: \"#e1dfdd\",\r\n        padding: \"8px\",\r\n        borderRadius: \"5px\"\r\n      }\r\n    }}\r\n  >\r\n    <Text>{message}</Text>\r\n  </Stack>\r\n);\r\nexport default BotMessage;\r\n","import React from \"react\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/github.css\";\r\nimport { FiCopy } from \"react-icons/fi\";\r\n\r\nconst CodeFormatter = ({ snippet }) => {\r\n  const languageMatch = snippet.match(/^(\\w+)\\n/);\r\n  const language = languageMatch ? languageMatch[1] : null;\r\n  const cleanedSnippet = snippet.replace(/^\\w+\\n/, \"\");\r\n  const highlightedSnippet = hljs.highlightAuto(\r\n    cleanedSnippet,\r\n    language ? [language] : null\r\n  ).value;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        backgroundColor: \"#f1f1f1\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"3px\",\r\n        padding: \"8px\",\r\n        marginBottom: \"8px\"\r\n      }}\r\n    >\r\n      <pre\r\n        style={{\r\n          overflowX: \"auto\",\r\n          whiteSpace: \"pre-wrap\",\r\n          wordWrap: \"break-word\"\r\n        }}\r\n        dangerouslySetInnerHTML={{ __html: highlightedSnippet }}\r\n      ></pre>\r\n      <FiCopy\r\n        style={{\r\n          cursor: \"pointer\",\r\n          position: \"absolute\",\r\n          right: \"8px\",\r\n          top: \"8px\",\r\n          color: \"#0078d4\",\r\n          fontSize: \"1.2rem\"\r\n        }}\r\n        onClick={() => {\r\n          navigator.clipboard.writeText(cleanedSnippet);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeFormatter;\r\n","import React from \"react\";\r\nimport { Stack, Text } from \"@fluentui/react\";\r\n\r\nconst Layout = ({ children }) => (\r\n  <Stack\r\n    horizontalAlign=\"center\"\r\n    verticalAlign=\"center\"\r\n    verticalFill\r\n    styles={{\r\n      root: {\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        margin: \"0 auto\",\r\n        textAlign: \"left\",\r\n        color: \"#605e5c\"\r\n        // background: \"#f3f2f1\",\r\n      }\r\n    }}\r\n    gap={15}\r\n  >\r\n    <Stack.Item styles={{ root: { width: \"100%\" } }}>{children}</Stack.Item>\r\n  </Stack>\r\n);\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Stack, Text } from \"@fluentui/react\";\r\n\r\nconst UserMessage = ({ message }) => (\r\n  <Stack\r\n    styles={{\r\n      root: {\r\n        backgroundColor: \"transparent\",\r\n        padding: \"8px\",\r\n        borderRadius: \"5px\"\r\n      }\r\n    }}\r\n  >\r\n    <Text>{message}</Text>\r\n  </Stack>\r\n);\r\n\r\nexport default UserMessage;\r\n","import { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\r\n\r\nconst SERVER_URL = \"https://74c3-44-208-85-154.ngrok-free.app\";\r\n\r\nconst UploadDocument = ({ onDocumentDataReceived }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"files\", selectedFile); // Change \"file\" to \"files\"\r\n\r\n    try {\r\n      const response = await fetch(`${SERVER_URL}/upload_documents`, {\r\n        method: \"POST\",\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      onDocumentDataReceived(data);\r\n      setSelectedFile(null); // Reset the selectedFile state after successful upload\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".pdf,.docx\"\r\n        onChange={handleFileChange}\r\n        style={{ display: \"none\" }}\r\n        id=\"fileInput\"\r\n      />\r\n      <label htmlFor=\"fileInput\">\r\n        <Button component=\"span\" color=\"primary\" style={{ padding: 0 }}>\r\n          <UploadFileIcon fontSize=\"large\" />\r\n        </Button>\r\n      </label>\r\n\r\n      {selectedFile && (\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={handleUpload}\r\n          style={{ marginLeft: \"0px\", padding: 0 }}\r\n        >\r\n          <CloudUploadIcon fontSize=\"large\" />\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadDocument;\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\r\nimport UploadDocument from \"./UploadDocument\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: \"#ffffff\"\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: \"#000000\"\r\n  },\r\n  container: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  const handleDocumentDataReceived = (data) => {\r\n    console.log(\"Document data received:\", data);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            DocSphere\r\n          </Typography>\r\n          <UploadDocument onDocumentDataReceived={handleDocumentDataReceived} />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nexport default MainLayout;\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n  getTheme,\r\n  mergeStyleSets\r\n} from \"@fluentui/react\";\r\nimport BotMessage from \"./BotMessage\";\r\nimport CodeFormatter from \"./CodeFormatter\";\r\nimport Layout from \"./Layout\";\r\nimport UserMessage from \"./UserMessage\";\r\nimport MainLayout from \"../MainLayout\";\r\nimport { Icon } from \"@iconify/react\";\r\n\r\nconst Chat = () => {\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n  const chatContainerRef = useRef(null);\r\n\r\n  const handleUserMessageChange = (event) => {\r\n    setUserMessage(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (userMessage) {\r\n      const botMessage = { message: \"Typing...\", isBot: true };\r\n      setChatMessages((prevChatMessages) => [\r\n        ...prevChatMessages,\r\n        { message: userMessage, isBot: false },\r\n        botMessage\r\n      ]);\r\n      setIsButtonClicked(true);\r\n    }\r\n  };\r\n\r\n  const fetchBotMessage = useCallback(() => {\r\n    fetch(\r\n      `https://74c3-44-208-85-154.ngrok-free.app/get_answer/?question=${userMessage} && k=2`,\r\n      {\r\n        headers: {\r\n          \"ngrok-skip-browser-warning\": \"1\"\r\n        }\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        const isError = data.answer.startsWith(\"@error:\");\r\n        const formattedAnswer = formatMessage(\r\n          isError ? data.answer.replace(\"@error:\", \"\") : data.answer\r\n        );\r\n\r\n        // Group the links by their file names\r\n        const groupedLinks = data.reference.reduce((acc, ref) => {\r\n          if (!acc[ref.link]) {\r\n            acc[ref.link] = [];\r\n          }\r\n          acc[ref.link].push(ref.pageNo);\r\n          return acc;\r\n        }, {});\r\n\r\n        // Create the link elements with the grouped page numbers\r\n        const references = isError\r\n          ? null\r\n          : Object.entries(groupedLinks).map(([link, pages], index) => (\r\n              <a\r\n                key={index}\r\n                href={`https://74c3-44-208-85-154.ngrok-free.app/?file=${link}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ marginRight: \"8px\" }}\r\n              >\r\n                link{index + 1}\r\n                {pages.map((page, i) => (\r\n                  <span key={i}>[{page}]</span>\r\n                ))}\r\n              </a>\r\n            ));\r\n\r\n        const botMessage = {\r\n          message: (\r\n            <>\r\n              {formattedAnswer}\r\n              <br />\r\n              {references}\r\n            </>\r\n          ),\r\n          isBot: true\r\n        };\r\n        setChatMessages((prevChatMessages) => [\r\n          ...prevChatMessages.slice(0, -1),\r\n          botMessage\r\n        ]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [userMessage]);\r\n\r\n  useEffect(() => {\r\n    if (isButtonClicked) {\r\n      fetchBotMessage();\r\n      setIsButtonClicked(false);\r\n      setUserMessage(\"\");\r\n    }\r\n  }, [isButtonClicked, fetchBotMessage]);\r\n\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop =\r\n        chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [chatMessages]);\r\n\r\n  const formatMessage = (message) => {\r\n    if (typeof message === \"string\") {\r\n      return message.split(\"```\").map((snippet, index) => {\r\n        if (index % 2 === 1) {\r\n          return <CodeFormatter key={index} snippet={snippet} />;\r\n        } else {\r\n          return (\r\n            <span key={index}>\r\n              {snippet.split(\"\\n\").map((line, i) => (\r\n                <React.Fragment key={i}>\r\n                  {line}\r\n                  <br />\r\n                </React.Fragment>\r\n              ))}\r\n            </span>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      return message;\r\n    }\r\n  };\r\n\r\n  const clearChat = () => {\r\n    setChatMessages([]);\r\n  };\r\n\r\n  const theme = getTheme();\r\n  const classNames = mergeStyleSets({\r\n    title: {\r\n      fontWeight: \"bold\",\r\n      fontSize: \"2rem\",\r\n      color: theme.palette.themePrimary\r\n    },\r\n    inputContainer: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    },\r\n    inputBox: {\r\n      flexGrow: 1,\r\n      marginRight: \"8px\",\r\n      borderRadius: \"25px\",\r\n      border: \"2px solid\",\r\n      borderColor: theme.palette.themePrimary,\r\n      paddingLeft: \"12px\",\r\n      paddingRight: \"12px\",\r\n      paddingTop: \"4px\",\r\n      paddingBottom: \"4px\",\r\n      // backgroundColor: theme.palette.neutralLighter,\r\n      \":hover\": {\r\n        borderColor: theme.palette.themeDark\r\n      },\r\n      \":focus-within\": {\r\n        borderColor: theme.palette.themeDark\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      {/* <Text className={classNames.title}>Ultron</Text> */}\r\n      <MainLayout\r\n        style={{\r\n          width: \"100%\"\r\n        }}\r\n      />\r\n\r\n      <Stack.Item>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"70vh\",\r\n            overflow: \"auto\"\r\n          }}\r\n          ref={chatContainerRef}\r\n        >\r\n          {chatMessages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: message.isBot ? \"flex-start\" : \"flex-end\",\r\n                marginBottom: \"8px\"\r\n              }}\r\n            >\r\n              {message.isBot ? (\r\n                <BotMessage\r\n                  message={message.message && formatMessage(message.message)}\r\n                />\r\n              ) : (\r\n                <UserMessage message={formatMessage(message.message)} />\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Stack.Item>\r\n\r\n      <Stack horizontal gap={15} styles={{ root: { width: \"100%\" } }}>\r\n        <Icon\r\n          icon=\"game-icons:magic-broom\"\r\n          style={{\r\n            cursor: \"pointer\",\r\n            fontSize: \"1.5rem\",\r\n            color: theme.palette.redDark,\r\n            alignSelf: \"center\"\r\n          }}\r\n          onClick={clearChat}\r\n        />\r\n        <TextField\r\n          className={classNames.inputBox}\r\n          value={userMessage}\r\n          onChange={handleUserMessageChange}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          multiline\r\n          resizable={false}\r\n          underlined\r\n          placeholder=\"Type...\"\r\n        />\r\n        <Icon\r\n          icon=\"fluent:send-16-regular\"\r\n          style={{\r\n            cursor: \"pointer\",\r\n            fontSize: \"1.5rem\",\r\n            color: theme.palette.themePrimary,\r\n            alignSelf: \"center\"\r\n          }}\r\n          onClick={handleSendMessage}\r\n        />\r\n      </Stack>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport Chat from \"./Components/Chat/Chat\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <Chat />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}